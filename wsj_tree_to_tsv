import nltk
from nltk.tree import *
import glob
import pandas as pd
import logging


tree_dict = {}
rel_list = []
text_list = []
df1 = pd.DataFrame()
#files = glob.glob("TRAINING/*.rst/*.lisp.name")
#sorted_files = sorted(files, key=lambda x:float(re.findall("(\d+)",x)[0]))
#for file in sorted_files:
with open("file1.lisp.name","r") as source_tree, open("outs.tok","w+") as sink:
        #contents = tree.read()
    #logging.warning(f"reading tree {file}")
    content = source_tree.read()
    tree = Tree.fromstring(content)
    for thing in tree.subtrees():
        if isinstance(thing, nltk.tree.Tree):
            if thing.label() == "rel2par":
                rel_list.append(" ".join([i for i in thing.leaves()]))

            elif thing.label() == "text":
                text_list.append(" ".join([i for i in thing.leaves()]))

    data_tuples = list(zip(rel_list,text_list))

    df = pd.DataFrame(data_tuples, columns=["relation","text"])
    df_formatted = df.assign(parent_text=df["text"].shift(1))
    df_formatted["parent_text"].fillna(value=df["text"].iloc[0],inplace=True) #fillna parent
    print(df_formatted.to_csv('file_1_rst.tsv', sep="\t"),file=sink)

